/* src/components/Navbar.module.css */
.navbar {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  padding: 1rem 0;
  z-index: 1000;
  transition: background-color 0.3s ease, box-shadow 0.3s ease;
  background-color: transparent; /* Initial state */
}

.navbar.scrolled {
  background-color: color-mix(in srgb, var(--dark-indigo-bg) 90%, black);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
}

.navContainer {
  /* .container class from index.css handles max-width and centering */
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.navLogo {
  font-family: var(--font-heading);
  font-size: 1.5rem;
  font-weight: bold;
  color: var(--light-text);
  text-decoration: none;
}

.navMenu {
  list-style: none;
  display: flex;
  gap: 1.5rem; /* Spacing between links */
}

.navLink {
  font-family: var(--font-body);
  color: var(--subtle-grey-text);
  text-decoration: none;
  font-weight: 500;
  transition: color 0.3s ease;
  position: relative; /* For underline effect */
  padding-bottom: 0.3em;
}

.navLink::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 0;
  height: 2px;
  background-color: var(--primary-violet);
  transition: width 0.3s ease-out;
}

.navLink:hover {
  color: var(--primary-violet);
}

.navLink:hover::after {
  width: 100%;
}

/* Basic responsive for Navbar menu - a proper hamburger menu is more complex */
@media (max-width: 768px) {
  .navMenu {
    /* For simplicity, we'll hide it. A real app needs a hamburger toggle. */
    /* Or you can try to make it wrap, or reduce font size / gap */
    display: none; 
  }
  .navContainer {
    justify-content: center; /* Center logo if menu is hidden */
  }
}